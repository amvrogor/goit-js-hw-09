{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAQC,SAASC,cAAc,uBAC/BC,EAAOF,SAASC,cAAc,sBAC9BE,EAASH,SAASC,cAAc,wBAChCG,EAAOJ,SAASC,cAAc,SAC9BI,EAAQL,SAASM,iBAAiB,SAoCxC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAEpBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAEpBA,E,IA3CPL,EAAKc,MAAMC,QAAU,OACrBf,EAAKc,MAAME,IAAM,OACjBhB,EAAKc,MAAMG,WAAa,WACxBhB,EAAMiB,SAAQ,SAAAC,GACZA,EAAEL,MAAMC,QAAU,OAClBI,EAAEL,MAAMM,cAAgB,Q,IAG1BpB,EAAKqB,iBAAiB,UAEtB,SAAkBF,GAChBA,EAAEG,iBAKF,IAJA,IAAIC,EAAaC,OAAO7B,EAAM8B,OAC1BC,EAAYF,OAAO1B,EAAK2B,OACxBE,EAAcH,OAAOzB,EAAO0B,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCzB,EAAcyB,EAAGL,GACdM,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAU2B,EAAKD,EAALjB,MACjBmB,EAAAvC,GAASwC,OAAOC,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAANJ,EAAM,O,IAGjDK,OAAM,SAAAN,G,IAAG1B,EAAQ0B,EAAR1B,SAAUiC,EAAKP,EAALjB,MAClBmB,EAAAvC,GAASwC,OAAOK,QACd,sBAAqCH,OAAf/B,EAAS,QAAY+B,OAANE,EAAM,O,IAGjDd,GAAcG,EAEhBP,EAAEoB,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst form = document.querySelector('.form');\nconst label = document.querySelectorAll('label');\n// const submit = document.querySelector('button[type=\"submit\"]');\n\nform.style.display = 'flex';\nform.style.gap = '10px';\nform.style.alignItems = 'flex-end';\nlabel.forEach(e => {\n  e.style.display = 'flex';\n  e.style.flexDirection = 'column';\n});\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  let delayValue = Number(delay.value);\n  let stepValue = Number(step.value);\n  let amountValue = Number(amount.value);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay} ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay} ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n  e.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$delay","document","querySelector","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$label","querySelectorAll","$ce04d3a99e08e73b$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","style","display","gap","alignItems","forEach","e","flexDirection","addEventListener","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","param","delay1","$parcel$interopDefault","Notify","success","concat","catch","delay2","failure","currentTarget","reset"],"version":3,"file":"03-promises.e821b23a.js.map"}